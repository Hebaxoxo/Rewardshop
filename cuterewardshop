import { useState, useEffect } from "react";
import { CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { motion } from "framer-motion";

const rewardsList = [
  { name: "K-Drama Episode", cost: 50 },
  { name: "Coloring Date", cost: 120 },
  { name: "Movie Night", cost: 160 },
  { name: "Meet Friend at Café", cost: 350 },
  { name: "Online Treat (<150 EGP)", cost: 250 },
  { name: "Eat Out", cost: 600 },
  { name: "Revision-Only Day", cost: 250 },
  { name: "New Item (Top, Accessory)", cost: 550 },
];

export default function CuteShop() {
  const [coins, setCoins] = useState(0);
  const [log, setLog] = useState([]);
  const [showRules, setShowRules] = useState(false);

  useEffect(() => {
    const storedCoins = localStorage.getItem("hebaCoins");
    const storedLog = localStorage.getItem("hebaLog");
    if (storedCoins) setCoins(parseInt(storedCoins));
    if (storedLog) setLog(JSON.parse(storedLog));
  }, []);

  useEffect(() => {
    localStorage.setItem("hebaCoins", coins);
    localStorage.setItem("hebaLog", JSON.stringify(log));
  }, [coins, log]);

  const addCoins = (hours) => {
    const newCoins = coins + hours * 15;
    setCoins(newCoins);
    setLog([...log, `+${hours * 15} coins for ${hours} hour(s) of work`]);
  };

  const redeemReward = (reward) => {
    if (coins >= reward.cost) {
      setCoins(coins - reward.cost);
      setLog([...log, `-${reward.cost} coins for ${reward.name}`]);
    } else {
      alert("Not enough coins! Work more to earn it 💪");
    }
  };

  return (
    <div className="min-h-screen bg-pink-100 p-6 font-sans">
      <motion.h1
        initial={{ opacity: 0, y: -20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ duration: 0.6 }}
        className="text-4xl font-bold text-center text-pink-700 mb-4"
      >
        🎀 Heba's Cute Reward Shop 🎀
      </motion.h1>

      <div className="flex justify-between mb-6 flex-wrap gap-4">
        <div>
          <h2 className="text-xl">💰 Coins: {coins}</h2>
          <div className="flex gap-2 mt-2 flex-wrap">
            {[0.5, 1, 1.5, 2, 3].map((h) => (
              <Button
                key={h}
                className="bg-pink-400 hover:bg-pink-500"
                onClick={() => addCoins(h)}
              >
                +{h} hr
              </Button>
            ))}
            <Button
              className="bg-yellow-400 hover:bg-yellow-500"
              onClick={() => setShowRules(!showRules)}
            >
              📜 Rules
            </Button>
          </div>
        </div>

        <div>
          <h2 className="text-lg font-medium">📋 Log</h2>
          <ul className="max-h-40 overflow-y-auto text-sm bg-white p-2 rounded-md">
            {log.slice().reverse().map((entry, i) => (
              <li key={i}>• {entry}</li>
            ))}
          </ul>
        </div>
      </div>

      {showRules && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          className="bg-white rounded-xl p-4 border border-pink-300 shadow mb-6"
        >
          <h3 className="text-lg font-semibold text-pink-700 mb-2">✨ Rules ✨</h3>
          <ul className="list-disc pl-5 text-sm text-gray-700 space-y-1">
            <li>🎯 You earn 10 coins for each hour of focused work.</li>
            <li>💸 You can only redeem a reward if you have enough coins logged.</li>
            <li>🧠 Treat your time as valuable currency — be your own EA.</li>
            <li>🚫 Anything that could harm momentum (scrolling, distractions) is not available here.</li>
            <li>🏡 Outside activities cost more to reflect energy cost for introverts like Heba.</li>
            <li>🌅 If you complete 3 hours of focused work before noon you get an extra 15 points.</li>
          </ul>
        </motion.div>
      )}

      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        transition={{ delay: 0.2 }}
        className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-4"
      >
        {rewardsList.map((reward, i) => (
          <motion.div
            whileHover={{ scale: 1.05 }}
            key={i}
            className="bg-white p-4 border border-pink-300 shadow-md rounded-xl"
          >
            <CardContent>
              <h3 className="text-lg font-semibold text-pink-700">
                {reward.name}
              </h3>
              <p className="text-sm mb-2">Cost: {reward.cost} coins</p>
              <Button
                className="bg-pink-500 hover:bg-pink-600 w-full"
                onClick={() => redeemReward(reward)}
              >
                Redeem 🎁
              </Button>
            </CardContent>
          </motion.div>
        ))}
      </motion.div>
    </div>
  );
}
